# 编译输出目录（`cargo build` 生成的目标文件）
/target/

# 测试覆盖率文件（例如通过 cargo tarpaulin 或 grcov 生成）
**/*.profraw
coverage/

# Cargo.lock 文件（仅适用于库项目）
# 对于二进制可执行项目，通常建议跟踪 Cargo.lock
# 如果是库项目，将下行取消注释以忽略 Cargo.lock
# /Cargo.lock

# 编译产生的输出和缓存
*.rs.bk

# 如果使用 `cargo install` 创建临时可执行文件，则可以忽略这些文件
cargo-install.log

# 包生成的输出（`cargo package` 时生成的 .crates 和 tar 文件）
**/*.crate

# Rust 文档生成的文件夹
/doc/

# Rusty's Editor config 文件
.rustup/

# IDE 和编辑器相关临时文件
.idea/             # IntelliJ IDEA
.vscode/           # Visual Studio Code
*.swp              # Vim 临时文件
*~                 # 临时文件
*.sublime-project  # Sublime 项目文件
*.sublime-workspace
*.vscode/
*.rs.fixer         #。对于插件
!**rewrite request